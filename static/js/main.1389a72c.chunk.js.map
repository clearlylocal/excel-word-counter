{"version":3,"sources":["wordCount.ts","parseExcelFiles.tsx","pages/Home.tsx","content/instructions.md","utils/fns.ts","utils/dom.ts","utils/utils.ts","utils/formatters.ts","pages/Instructions.tsx","utils/react.ts","utils/snarkdown.ts","Routes.tsx","App.tsx","index.tsx"],"names":["DEFAULT_PUNCTUATION","EMPTY_RESULT","words","count","wordDetect","text","config","trim","punctuationReplacer","punctuationAsBreaker","defaultPunctuations","disableDefaultPunctuation","customizedPunctuations","punctuation","combinedPunctionations","concat","forEach","punctuationReg","RegExp","replace","split","filter","word","common","cjk","jp","kr","reg","detectedWords","matched","carry","exec","push","length","wordCount","flattenUnzip","files","Promise","all","map","file","type","JSZip","loadAsync","zip","Object","values","zobj","dir","async","zblob","zfile","File","name","lastModified","date","getTime","flat","results","countPerLinguist","rowsCountedPerFile","languages","res","langCode","getLangName","reader","FileReader","onloadend","arrayBuffer","result","ExcelJS","Workbook","xlsx","load","then","workbook","worksheets","sheet","getRows","headers","rows","linguistCol","srcCol","every","x","includes","row","wc","readAsArrayBuffer","eachRow","rowNumber","Array","isArray","String","fromEntries","h","i","init","fileNameFormat","raw","JSON","parse","localStorage","getItem","fileName","before","after","beforeIdx","indexOf","beforeEnd","afterIdx","slice","ResultsDisplay","keys","className","align","entries","num","rowSpan","colSpan","l","linguist","langData","j","Home","useForm","register","watch","handleSubmit","useMemo","useState","setResults","useEffect","parseExcelFiles","onChange","data","setItem","stringify","multiple","ref","renderAnchors","el","defaultVal","slugs","Proxy","create","get","target","key","querySelectorAll","heading","textContent","slug","toLowerCase","regex","id","Boolean","join","classList","add","scrollHashIntoView","window","location","hash","setTimeout","matchedEl","fns","reduce","val","fn","pipe","decodeURIComponent","CSS","escape","querySelector","scrollIntoView","Instructions","callback","html","setHtml","history","useHistory","fetch","instructionsMdUrl","cache","content","m","some","ch","startsWith","test","_snarkdown","link","href","getAttribute","setAttribute","process","prependPublicUrlToRelativeLinks","addEventListener","e","nodeName","preventDefault","origin","open","contains","handleLinks","parentEl","observer","MutationObserver","disconnect","observe","childList","dangerouslySetInnerHTML","__html","Routes","exact","path","App","basename","alt","src","activeClassName","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1389a72c.chunk.js","sourcesContent":["// modified from https://github.com/byn9826/words-count/blob/master/src/globalWordsCount.js\n\nconst DEFAULT_PUNCTUATION = [\n\t',',\n\t'，',\n\t'.',\n\t'。',\n\t':',\n\t'：',\n\t';',\n\t'；',\n\t'[',\n\t']',\n\t'【',\n\t']',\n\t'】',\n\t'{',\n\t'｛',\n\t'}',\n\t'｝',\n\t'(',\n\t'（',\n\t')',\n\t'）',\n\t'<',\n\t'《',\n\t'>',\n\t'》',\n\t'$',\n\t'￥',\n\t'!',\n\t'！',\n\t'?',\n\t'？',\n\t'~',\n\t'～',\n\t\"'\",\n\t'’',\n\t'\"',\n\t'“',\n\t'”',\n\t'*',\n\t'/',\n\t'\\\\',\n\t'&',\n\t'%',\n\t'@',\n\t'#',\n\t'^',\n\t'、',\n\t'、',\n\t'、',\n\t'、',\n]\n\nconst EMPTY_RESULT = {\n\twords: [],\n\tcount: 0,\n}\n\ntype Config = {\n\tpunctuationAsBreaker: string\n\tdisableDefaultPunctuation: string[]\n\tpunctuation: string[]\n}\n\nconst wordDetect = (text: string, config: Partial<Config> = {}) => {\n\tif (!text || text.trim() === '') return EMPTY_RESULT\n\n\tconst punctuationReplacer = config.punctuationAsBreaker ? ' ' : ''\n\tconst defaultPunctuations = config.disableDefaultPunctuation\n\t\t? []\n\t\t: DEFAULT_PUNCTUATION\n\tconst customizedPunctuations = config.punctuation || []\n\tconst combinedPunctionations = defaultPunctuations.concat(\n\t\tcustomizedPunctuations,\n\t)\n\n\t// Remove punctuations or change to empty space\n\tcombinedPunctionations.forEach(function (punctuation) {\n\t\tconst punctuationReg = new RegExp('\\\\' + punctuation, 'g')\n\t\ttext = text.replace(punctuationReg, punctuationReplacer)\n\t})\n\t// Remove all kind of symbols\n\ttext = text.replace(/[\\uFF00-\\uFFEF\\u2000-\\u206F]/g, '')\n\t// Format white space character\n\ttext = text.replace(/\\s+/, ' ')\n\t// Split words by white space (For European languages)\n\n\tlet words = text.split(' ')\n\twords = words.filter((word) => word.trim())\n\t// Match latin, cyrillic, Malayalam letters and numbers\n\tconst common =\n\t\t'(\\\\d+)|[a-zA-Z\\u00C0-\\u00FF\\u0100-\\u017F\\u0180-\\u024F\\u0250-\\u02AF\\u1E00-\\u1EFF\\u0400-\\u04FF\\u0500-\\u052F\\u0D00-\\u0D7F]+|'\n\t// Match Chinese Hànzì, the Japanese Kanji and the Korean Hanja\n\tconst cjk =\n\t\t'\\u2E80-\\u2EFF\\u2F00-\\u2FDF\\u3000-\\u303F\\u31C0-\\u31EF\\u3200-\\u32FF\\u3300-\\u33FF\\u3400-\\u3FFF\\u4000-\\u4DBF\\u4E00-\\u4FFF\\u5000-\\u5FFF\\u6000-\\u6FFF\\u7000-\\u7FFF\\u8000-\\u8FFF\\u9000-\\u9FFF\\uF900-\\uFAFF'\n\t// Match Japanese Hiragana, Katakana, Rōmaji\n\tconst jp = '\\u3040-\\u309F\\u30A0-\\u30FF\\u31F0-\\u31FF\\u3190-\\u319F'\n\t// Match Korean Hangul\n\tconst kr =\n\t\t'\\u1100-\\u11FF\\u3130-\\u318F\\uA960-\\uA97F\\uAC00-\\uAFFF\\uB000-\\uBFFF\\uC000-\\uCFFF\\uD000-\\uD7AF\\uD7B0-\\uD7FF'\n\n\tconst reg = new RegExp(common + '[' + cjk + jp + kr + ']', 'g')\n\tlet detectedWords = []\n\twords.forEach(function (word) {\n\t\tconst carry = []\n\t\tlet matched: RegExpExecArray\n\t\tdo {\n\t\t\tmatched = reg.exec(word)\n\t\t\tif (matched) carry.push(matched[0])\n\t\t} while (matched)\n\t\tif (carry.length === 0) {\n\t\t\tdetectedWords.push(word)\n\t\t} else {\n\t\t\tdetectedWords = detectedWords.concat(carry)\n\t\t}\n\t})\n\treturn {\n\t\twords: detectedWords,\n\t\tcount: detectedWords.length,\n\t}\n}\n\nconst wordCount = (text: string, config: Partial<Config> = {}) => {\n\tconst { count } = wordDetect(text, config)\n\treturn count\n}\n\nconst wordSplit = (text: string, config: Partial<Config> = {}) => {\n\tconst { words } = wordDetect(text, config)\n\treturn words\n}\n\nexport { wordCount, wordSplit, wordDetect }\n","import ExcelJS from 'exceljs'\nimport { wordCount } from './wordCount'\nimport { Config, Results, getLangName, getRows } from './pages/Home'\nimport JSZip from 'jszip'\n\nconst flattenUnzip = async (files: FileList | File[]) => {\n\tconst all = await Promise.all(\n\t\t[...files].map(async (file) => {\n\t\t\tif (file.type === 'application/x-zip-compressed') {\n\t\t\t\tconst zip = await JSZip.loadAsync(file)\n\n\t\t\t\tconst files: File[] = []\n\n\t\t\t\tfor (const zobj of Object.values(zip.files)) {\n\t\t\t\t\tif (zobj.dir) continue\n\n\t\t\t\t\tconst zblob = await zobj.async('blob')\n\n\t\t\t\t\tconst zfile = new File([zblob], zobj.name, {\n\t\t\t\t\t\tlastModified: zobj.date.getTime(),\n\t\t\t\t\t\ttype: 'xxx/xxx', // TODO\n\t\t\t\t\t})\n\n\t\t\t\t\tfiles.push(zfile)\n\t\t\t\t}\n\n\t\t\t\treturn files\n\t\t\t}\n\n\t\t\treturn file\n\t\t}),\n\t)\n\n\treturn all.flat()\n}\n\nexport async function parseExcelFiles(\n\tfiles: FileList | File[],\n\tconfig: Config,\n): Promise<Results | null> {\n\tif (!files.length) return null\n\n\tconst results: Results = {\n\t\tcountPerLinguist: {},\n\t\trowsCountedPerFile: {},\n\t\tlanguages: {},\n\t}\n\n\tfiles = await flattenUnzip(files)\n\n\tawait Promise.all(\n\t\t[...files].map(\n\t\t\t(file) =>\n\t\t\t\tnew Promise<void>((res) => {\n\t\t\t\t\tconst langCode = getLangName(file.name)\n\n\t\t\t\t\tresults.rowsCountedPerFile[file.name] = 0\n\n\t\t\t\t\tif (!langCode) {\n\t\t\t\t\t\treturn res()\n\t\t\t\t\t}\n\n\t\t\t\t\tconst reader = new FileReader()\n\n\t\t\t\t\treader.onloadend = () => {\n\t\t\t\t\t\tconst arrayBuffer = reader.result as ArrayBuffer\n\n\t\t\t\t\t\tconst workbook = new ExcelJS.Workbook()\n\n\t\t\t\t\t\tworkbook.xlsx.load(arrayBuffer).then((workbook) => {\n\t\t\t\t\t\t\tworkbook.worksheets.forEach((sheet) => {\n\t\t\t\t\t\t\t\tconst { headers, rows } = getRows(sheet)\n\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\theaders &&\n\t\t\t\t\t\t\t\t\t[config.linguistCol, config.srcCol].every(\n\t\t\t\t\t\t\t\t\t\t(x) => headers.includes(x),\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tfor (const row of rows) {\n\t\t\t\t\t\t\t\t\t\t// if (!row[langCode]) {\n\t\t\t\t\t\t\t\t\t\t// \tcontinue\n\t\t\t\t\t\t\t\t\t\t// }\n\n\t\t\t\t\t\t\t\t\t\tconst wc = wordCount(row[config.srcCol])\n\n\t\t\t\t\t\t\t\t\t\tif (!wc) {\n\t\t\t\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tresults.countPerLinguist[\n\t\t\t\t\t\t\t\t\t\t\trow[config.linguistCol]\n\t\t\t\t\t\t\t\t\t\t] = {\n\t\t\t\t\t\t\t\t\t\t\t...results.countPerLinguist[\n\t\t\t\t\t\t\t\t\t\t\t\trow[config.linguistCol]\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t[langCode]:\n\t\t\t\t\t\t\t\t\t\t\t\t(results.countPerLinguist[\n\t\t\t\t\t\t\t\t\t\t\t\t\trow[config.linguistCol]\n\t\t\t\t\t\t\t\t\t\t\t\t]?.[langCode] ?? 0) + wc,\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tresults.languages[langCode] = true\n\n\t\t\t\t\t\t\t\t\t\tresults.rowsCountedPerFile[\n\t\t\t\t\t\t\t\t\t\t\tfile.name\n\t\t\t\t\t\t\t\t\t\t] += 1\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\treturn res()\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\treader.readAsArrayBuffer(file)\n\t\t\t\t}),\n\t\t),\n\t)\n\n\treturn results\n}\n","import { FC, useEffect, useMemo, useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport ExcelJS from 'exceljs'\nimport { parseExcelFiles } from '../parseExcelFiles'\n\nexport type Results = {\n\tcountPerLinguist: Record<\n\t\tstring, // linguistEmail\n\t\tRecord<\n\t\t\tstring, // languageCode\n\t\t\tnumber // wordCount\n\t\t>\n\t>\n\trowsCountedPerFile: Record<\n\t\tstring, // fileName\n\t\tnumber // rowCount\n\t>\n\tlanguages: Record<\n\t\tstring, // languageCode\n\t\ttrue\n\t>\n}\n\nexport const getRows = (sheet: ExcelJS.Worksheet) => {\n\tlet headers: string[]\n\n\tconst rows: Record<string, string>[] = []\n\n\tsheet.eachRow((row, rowNumber) => {\n\t\tif (rowNumber === 1) {\n\t\t\t// is header row\n\n\t\t\tif (Array.isArray(row.values)) {\n\t\t\t\theaders = row.values.map((x) => String(x).trim())\n\t\t\t} else {\n\t\t\t\t// todo - handle if necessary\n\t\t\t\theaders = []\n\t\t\t}\n\t\t} else {\n\t\t\t// is body row\n\n\t\t\tif (!headers) return\n\n\t\t\trows.push(\n\t\t\t\tObject.fromEntries(\n\t\t\t\t\theaders\n\t\t\t\t\t\t.map((h, i) => [\n\t\t\t\t\t\t\th,\n\t\t\t\t\t\t\trow.values[i] && String(row.values[i]),\n\t\t\t\t\t\t])\n\t\t\t\t\t\t.filter((x) => x && x[1]),\n\t\t\t\t),\n\t\t\t)\n\t\t}\n\t})\n\n\treturn { headers, rows }\n}\n\nconst init = {\n\tfileNameFormat: String.raw`Need_Translate_To_{{lang}}_for-`,\n\n\tsrcCol: 'eng',\n\tlinguistCol: 'user_name',\n}\n\nexport type Config = typeof init\n\nconst stored: Config = {\n\t...init,\n\t...JSON.parse(localStorage.getItem('form') ?? '{}'),\n}\n\n// TODO\nconst config = stored\n\nexport const getLangName = (fileName: string) => {\n\tconst [before, after] = config.fileNameFormat.split(/\\{\\{\\s*lang\\s*\\}\\}/)\n\n\tconst beforeIdx = fileName.indexOf(before)\n\tconst beforeEnd = beforeIdx + before.length\n\tconst afterIdx = fileName.indexOf(after, beforeEnd)\n\n\treturn [beforeIdx, afterIdx].includes(-1)\n\t\t? null\n\t\t: fileName.slice(beforeEnd, afterIdx)\n}\n\nconst ResultsDisplay: FC<{ results: Results }> = ({\n\tresults,\n}: {\n\tresults: Results\n}) => {\n\tconst { countPerLinguist, rowsCountedPerFile } = results\n\n\tconst languages = Object.keys(results.languages)\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>Rows counted per file</h2>\n\n\t\t\t<div className='table-scroller table-scroller-y'>\n\t\t\t\t<table>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>File</th>\n\t\t\t\t\t\t\t<th align='right'>Rows counted</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{Object.entries(rowsCountedPerFile).map(\n\t\t\t\t\t\t\t([file, num], i) => (\n\t\t\t\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t\t\t\t<td>{file}</td>\n\t\t\t\t\t\t\t\t\t<td align='right'>{num}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t)}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\n\t\t\t<hr />\n\n\t\t\t<h2>Count per linguist</h2>\n\n\t\t\t<div className='table-scroller'>\n\t\t\t\t<table>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th rowSpan={2}>Linguist</th>\n\t\t\t\t\t\t\t<th colSpan={languages.length} align='right'>\n\t\t\t\t\t\t\t\tLanguages\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t{languages.map((l, i) => (\n\t\t\t\t\t\t\t\t<th key={i} align='right'>\n\t\t\t\t\t\t\t\t\t{l}\n\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{Object.entries(countPerLinguist).map(\n\t\t\t\t\t\t\t([linguist, langData], i) => (\n\t\t\t\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t\t\t\t<td>{linguist}</td>\n\t\t\t\t\t\t\t\t\t{languages.map((l, j) => (\n\t\t\t\t\t\t\t\t\t\t<td key={j} align='right'>\n\t\t\t\t\t\t\t\t\t\t\t{langData[l]}\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t)}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport const Home = () => {\n\tconst { register, watch, handleSubmit } = useForm()\n\n\tconst changeHandler = (data: any) => {\n\t\tlocalStorage.setItem('form', JSON.stringify(data))\n\t}\n\n\tconst files: FileList = useMemo(\n\t\t() => watch('file') ?? ([] as any as FileList),\n\t\t[watch],\n\t)\n\n\tconst [results, setResults] = useState<Results | null>(null)\n\n\tuseEffect(() => {\n\t\tparseExcelFiles(files, config).then(setResults)\n\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [files])\n\n\treturn (\n\t\t<>\n\t\t\t<form onChange={handleSubmit(changeHandler)}>\n\t\t\t\t<label>\n\t\t\t\t\tUpload files (XLSX or ZIP)\n\t\t\t\t\t<input type='file' name='file' multiple ref={register} />\n\t\t\t\t</label>\n\t\t\t</form>\n\t\t\t{results ? (\n\t\t\t\t<div>\n\t\t\t\t\t<ResultsDisplay {...{ results }} />\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</>\n\t)\n}\n","export default __webpack_public_path__ + \"static/media/instructions.47a28d49.md\";","export function pipe<A>(a: A): A\nexport function pipe<A, B>(a: A, ab: (a: A) => B): B\nexport function pipe<A, B, C>(a: A, ab: (a: A) => B, bc: (b: B) => C): C\nexport function pipe<A, B, C, D>(\n\ta: A,\n\tab: (a: A) => B,\n\tbc: (b: B) => C,\n\tcd: (c: C) => D,\n): D\nexport function pipe<A, B, C, D, E>(\n\ta: A,\n\tab: (a: A) => B,\n\tbc: (b: B) => C,\n\tcd: (c: C) => D,\n\tde: (d: D) => E,\n): E\nexport function pipe<A, B, C, D, E, F>(\n\ta: A,\n\tab: (a: A) => B,\n\tbc: (b: B) => C,\n\tcd: (c: C) => D,\n\tde: (d: D) => E,\n\tef: (e: E) => F,\n): F\nexport function pipe(init: any, ...fns: any[]) {\n\treturn fns.reduce((val, fn) => fn(val), init)\n}\n\nexport function pipeNullable<A>(a: A): A\nexport function pipeNullable<A, B>(\n\ta: A,\n\tab: (a: NonNullable<A>) => B,\n): NonNullable<B>\nexport function pipeNullable<A, B, C>(\n\ta: A,\n\tab: (a: NonNullable<A>) => B,\n\tbc: (b: NonNullable<B>) => C,\n): NonNullable<C>\nexport function pipeNullable<A, B, C, D>(\n\ta: A,\n\tab: (a: NonNullable<A>) => B,\n\tbc: (b: NonNullable<B>) => C,\n\tcd: (c: NonNullable<C>) => D,\n): NonNullable<D>\nexport function pipeNullable<A, B, C, D, E>(\n\ta: A,\n\tab: (a: NonNullable<A>) => B,\n\tbc: (b: NonNullable<B>) => C,\n\tcd: (c: NonNullable<C>) => D,\n\tde: (d: NonNullable<D>) => E,\n): NonNullable<E>\nexport function pipeNullable<A, B, C, D, E, F>(\n\ta: A,\n\tab: (a: NonNullable<A>) => B,\n\tbc: (b: NonNullable<B>) => C,\n\tcd: (c: NonNullable<C>) => D,\n\tde: (d: NonNullable<D>) => E,\n\tef: (e: NonNullable<E>) => F,\n): NonNullable<F>\nexport function pipeNullable(init: any, ...fns: any[]) {\n\treturn fns.reduce((val, fn) => (val == null ? val : fn(val)), init)\n}\n\nexport const permute =\n\t<T>(arr: T[]) =>\n\t(arrOfArrs: T[][]) =>\n\t\tarr.flatMap((x) => arrOfArrs.map((a) => [...a, x]))\n","import { useHistory } from 'react-router-dom'\nimport { pipe } from './fns'\nimport { slugify } from './formatters'\nimport { hashWithDefault } from './utils'\n\nexport const renderAnchors = (el: HTMLElement) => {\n\tconst slugs = hashWithDefault(0)\n\n\tfor (const heading of el.querySelectorAll(\n\t\t'h2, h3, h4, h5, h6, .anchored',\n\t)) {\n\t\tif (heading.textContent) {\n\t\t\tconst slug = slugify(heading.textContent) || 'heading'\n\n\t\t\tconst x = ++slugs[slug]\n\n\t\t\theading.id = [slug, x > 1 && x].filter(Boolean).join('-')\n\t\t\theading.classList.add('anchored')\n\t\t}\n\t}\n}\n\nexport const prependPublicUrlToRelativeLinks = (el: HTMLElement) => {\n\tfor (const link of el.querySelectorAll('a')) {\n\t\tconst href = link.getAttribute('href')\n\n\t\tif (href?.startsWith('/')) {\n\t\t\tlink.setAttribute('href', process.env.PUBLIC_URL + href)\n\t\t}\n\t}\n}\n\nexport const handleLinks = (\n\tel: HTMLElement,\n\thistory: ReturnType<typeof useHistory>,\n) => {\n\tel.addEventListener('click', (e) => {\n\t\tconst target = e.target as HTMLAnchorElement\n\t\tconst href = target.getAttribute('href')\n\n\t\tif (target.nodeName === 'A' && href) {\n\t\t\te.preventDefault()\n\n\t\t\tif (\n\t\t\t\thref.startsWith('http') &&\n\t\t\t\t!href.startsWith(window.location.origin)\n\t\t\t) {\n\t\t\t\twindow.open(href, '_blank', 'noopener noreferrer')\n\t\t\t} else {\n\t\t\t\thistory.push(href.slice(process.env.PUBLIC_URL.length))\n\t\t\t}\n\t\t} else if (target.classList.contains('anchored')) {\n\t\t\twindow.location.hash = target.id\n\t\t\ttarget.scrollIntoView(true)\n\t\t}\n\t})\n}\n\nexport const scrollHashIntoView = (el: HTMLElement) => {\n\tif (window.location.hash) {\n\t\tsetTimeout(() => {\n\t\t\tconst matchedEl = pipe(\n\t\t\t\twindow.location.hash.slice(1),\n\t\t\t\tdecodeURIComponent,\n\t\t\t\tCSS.escape,\n\t\t\t\t(id) => el.querySelector(`#${id}`),\n\t\t\t)\n\n\t\t\tmatchedEl?.scrollIntoView(true)\n\t\t\t// 100ms to counteract browser position retaining\n\t\t}, 100)\n\t}\n}\n","export const hashWithDefault = <T>(defaultVal: T) =>\n\tnew Proxy(Object.create(null) as Record<string, T>, {\n\t\tget(target, key: string) {\n\t\t\treturn key in target ? target[key] : defaultVal\n\t\t},\n\t})\n","import { regex } from 'fancy-regex'\n\nexport const slugify = (str: string) =>\n\tstr\n\t\t.toLowerCase()\n\t\t.replace(\n\t\t\tregex('gu')`[\n\t\t\t\t^\n\t\t\t\t\\p{Letter}\n\t\t\t\t\\p{Mark}\n\t\t\t\t\\p{Number}\n\t\t\t]+`,\n\t\t\t' ',\n\t\t)\n\t\t.trim()\n\t\t.replace(/\\s+/g, '-')\n\nexport const filenameify = (date: Date) =>\n\tdate.toISOString().replace(/:/g, '_').slice(0, 19) + 'Z'\n","import { FC, useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport instructionsMdUrl from '../content/instructions.md'\nimport {\n\thandleLinks,\n\tprependPublicUrlToRelativeLinks,\n\trenderAnchors,\n\tscrollHashIntoView,\n} from '../utils/dom'\nimport { onHtmlRender } from '../utils/react'\nimport { snarkdown } from '../utils/snarkdown'\n\nexport const Instructions: FC = () => {\n\tconst [html, setHtml] = useState('')\n\n\tconst history = useHistory()\n\n\tuseEffect(() => {\n\t\tfetch(instructionsMdUrl, { cache: 'force-cache' }).then(async (res) => {\n\t\t\tconst content = await res.text()\n\n\t\t\tconst html = snarkdown(content)\n\n\t\t\tsetHtml(html)\n\t\t})\n\t}, [])\n\n\treturn (\n\t\t<div\n\t\t\tref={onHtmlRender((el) => {\n\t\t\t\t// setup\n\t\t\t\trenderAnchors(el)\n\t\t\t\tprependPublicUrlToRelativeLinks(el)\n\t\t\t\thandleLinks(el, history)\n\n\t\t\t\t// effects\n\t\t\t\tscrollHashIntoView(el)\n\t\t\t})}\n\t\t\tdangerouslySetInnerHTML={{ __html: html }}\n\t\t/>\n\t)\n}\n","export const onHtmlRender =\n\t(callback: (parentEl: HTMLElement) => void) =>\n\t(parentEl: HTMLElement | null) => {\n\t\tif (!parentEl) return\n\n\t\tconst observer = new MutationObserver((m) => {\n\t\t\tcallback(parentEl)\n\n\t\t\tobserver.disconnect()\n\t\t})\n\n\t\tobserver.observe(parentEl, { childList: true })\n\t}\n","import { default as _snarkdown } from 'snarkdown'\n\nexport const snarkdown = (md: string) => {\n\tconst html = md\n\t\t.split(/((?<=^|\\n)```\\r?\\n[\\s\\S]*?\\r?\\n```)/)\n\t\t.map((m, i) =>\n\t\t\ti % 2\n\t\t\t\t? `<pre><code>${m\n\t\t\t\t\t\t.split(/\\r?\\n/)\n\t\t\t\t\t\t.slice(1, -1)\n\t\t\t\t\t\t.join('\\n')}</pre></code>`\n\t\t\t\t: m\n\t\t\t\t\t\t.split(/(?:\\r?\\n){2,}/)\n\t\t\t\t\t\t.map((l) => {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t[' ', '\\t', '#', '-', '*', '`', '~'].some(\n\t\t\t\t\t\t\t\t\t(ch) => l.startsWith(ch),\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn /^\\s*-{3,}\\s*$/.test(l)\n\t\t\t\t\t\t\t\t\t? `<hr>`\n\t\t\t\t\t\t\t\t\t: _snarkdown(l)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn `<p>${_snarkdown(l)}</p>`\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join(''),\n\t\t)\n\t\t.join('')\n\t\t.replace(/<p><\\/p>/g, '')\n\n\treturn html\n}\n","import { FC } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { Home } from './pages/Home'\nimport { Instructions } from './pages/Instructions'\n\nexport const Routes: FC = () => {\n\treturn (\n\t\t<Switch>\n\t\t\t<Route exact path='/'>\n\t\t\t\t<Home />\n\t\t\t</Route>\n\t\t\t<Route path='/instructions'>\n\t\t\t\t<Instructions />\n\t\t\t</Route>\n\t\t</Switch>\n\t)\n}\n","import { FC } from 'react'\nimport { BrowserRouter as Router, NavLink } from 'react-router-dom'\nimport { Routes } from './Routes'\n\nexport const App: FC = () => {\n\treturn (\n\t\t<>\n\t\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t\t<nav className='tabs'>\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName='site-title'\n\t\t\t\t\t\talt='Clearly Local'\n\t\t\t\t\t\tsrc={process.env.PUBLIC_URL + '/cl-logo-small.png'}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<NavLink exact activeClassName='active' to='/'>\n\t\t\t\t\t\tWord Counter\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t<NavLink activeClassName='active' to='/instructions'>\n\t\t\t\t\t\tInstructions\n\t\t\t\t\t</NavLink>\n\t\t\t\t</nav>\n\t\t\t\t<main className='container'>\n\t\t\t\t\t<Routes />\n\t\t\t\t</main>\n\t\t\t</Router>\n\t\t</>\n\t)\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'chota/dist/chota.css' // can't use .min.css due to CRA transpiling bug\nimport './styles/index.css'\nimport { App } from './App'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n)\n"],"sourceRoot":""}